# Training Configuration for H100 GPU Server
# Medical Fracture Detection Binary Classification

# Data Configuration
data:
  # Use the balanced CNN training datasets (6k negative + all positive)
  train_csv: "balanced_dataset_cnn_train.csv"
  val_csv: "balanced_dataset_cnn_val.csv"
  test_csv: "balanced_dataset_cnn.csv"  # Use balanced dataset for testing
  image_root: "/mount/civiescaks01storage01/aksfileshare01/CNN/gleamer-images/"
  output_dir: "./training_outputs/"
  
  # Data splits (not needed since we have pre-split files)
  train_split: 0.9
  val_split: 0.1
  test_split: 0.0
  
  # Image preprocessing
  image_size: [600, 600]  # EfficientNet-B7 optimal size
  channels: 3
  normalize: true
  augmentation: true

# Model Configuration
model:
  architecture: "efficientnet_b7"  # Maximum accuracy for medical imaging
  num_classes: 2
  pretrained: true
  dropout: 0.3  # Reduced dropout for better feature learning
  
  # Class labels
  class_names: ["NEGATIVE", "POSITIVE"]
  class_weights: [1.0, 1.2]  # Balanced weight for ~40.5% positive rate
  
  # Advanced model settings
  use_focal_loss: true  # Better for imbalanced medical data
  focal_alpha: 0.25
  focal_gamma: 2.0
  target_accuracy: 0.95  # Very high target for medical accuracy

# Training Configuration
training:
  batch_size: 16  # Optimized for balanced dataset (smaller, more balanced)
  num_epochs: 150  # Balanced epochs for convergence
  learning_rate: 0.0002  # Slightly higher LR for faster convergence
  weight_decay: 0.0001  # Optimal weight decay
  
  # Optimizer
  optimizer: "adamw"
  scheduler: "cosine"
  warmup_epochs: 20  # Longer warmup
  
  # Early stopping
  patience: 30  # More patience for better convergence
  min_delta: 0.0005  # Smaller improvement threshold
  
  # Mixed precision
  use_amp: true
  
  # Checkpointing
  save_best: true
  save_frequency: 3
  save_every_n_epochs: 3

# Hardware Configuration
hardware:
  device: "cuda"
  num_workers: 8
  pin_memory: true
  mixed_precision: true
  
  # H100 specific optimizations
  compile_model: true
  use_torch_compile: true

# Logging Configuration
logging:
  use_wandb: true
  wandb_project: "medical-fracture-detection"
  wandb_entity: "collaborative-imaging"
  
  # Local logging
  log_dir: "./training_outputs/logs/"
  save_predictions: true
  save_confusion_matrix: true

# Evaluation Configuration
evaluation:
  metrics: ["accuracy", "precision", "recall", "f1", "auc"]
  save_predictions: true
  generate_report: true
  
  # Threshold optimization
  optimize_threshold: true
  threshold_range: [0.1, 0.9]

# Inference Configuration
inference:
  model_path: "./training_outputs/best_model.pth"
  batch_size: 16
  confidence_threshold: 0.5
  
  # API settings
  api_host: "0.0.0.0"
  api_port: 8000
  api_workers: 1
